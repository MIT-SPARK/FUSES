node {
  name: "x_pl"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "y_pl"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "test_model/model/images/resize_images/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/images/resize_images/ResizeBilinear"
  op: "ResizeBilinear"
  input: "x_pl"
  input: "test_model/model/images/resize_images/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/images/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/images/transpose"
  op: "Transpose"
  input: "test_model/model/images/resize_images/ResizeBilinear"
  input: "test_model/model/images/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/images/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "test_model/model/images/sub"
  op: "Sub"
  input: "test_model/model/images/transpose"
  input: "test_model/model/images/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/images/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "test_model/model/images/truediv"
  op: "RealDiv"
  input: "test_model/model/images/sub"
  input: "test_model/model/images/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19245009124279022
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/images/truediv"
  input: "model/encoder/downsample1/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample1/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/images/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample1/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/concat"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/incept-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/res/add"
  input: "model/encoder/downsample2/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/encoder/downsample1/incept-1/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\014\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1666666716337204
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 12
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1178511306643486
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12909944355487823
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 12
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12909944355487823
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 12
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10910894721746445
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 12
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10910894721746445
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 12
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/concat"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\030\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1178511306643486
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09128709137439728
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09128709137439728
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07715167850255966
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07715167850255966
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/concat/concat"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/concat"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/concat"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/incept-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/res/add"
  input: "model/encoder/downsample3/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/encoder/downsample2/incept-1/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample3/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/concat"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/concat"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04419417306780815
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/concat"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/concat"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/concat"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/res/add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/res/add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/concat"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/concat"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04419417306780815
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/concat"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/concat"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/concat"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-1/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/res/add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/res/add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/concat"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/concat"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04419417306780815
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/concat"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/concat"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/concat"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-2/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/res/add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/res/add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/concat"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07905694097280502
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/concat"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.055901698768138885
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04419417306780815
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/concat"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03952847048640251
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033407654613256454
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/concat/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/concat"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/concat"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/encoder/godeep/dense-inception-3/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/encoder/godeep/dense-inception-4/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/concat"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/decoder/upsample/unpool1/incept-1/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/concat"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\300\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/decoder/upsample/unpool2/incept-1/dense_inception/res/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15811388194561005
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  op: "Reshape"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/read"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  op: "Reshape"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/read"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  op: "Reshape"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/read"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  op: "Reshape"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/read"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_3"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/Rsqrt"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/concat/concat"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_2"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/Reshape_1"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/mul_1"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/concat"
  op: "ConcatV2"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/out/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/squash/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/concat"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/res/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/squash/convolution/Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/logits/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/logits/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/logits/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/logits/weights/w/Initializer/truncated_normal/mul"
  input: "model/logits/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "model/logits/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/logits/weights/w/Assign"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "model/logits/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/logits/weights/w/read"
  op: "Identity"
  input: "model/logits/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/logits/biases/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314="
      }
    }
  }
}
node {
  name: "model/logits/biases/b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/logits/biases/b/Assign"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "test_model/model/logits/biases/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/logits/biases/b/read"
  op: "Identity"
  input: "model/logits/biases/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
}
node {
  name: "test_model/model/logits/linear/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/incept-1/dense_inception/res/add"
  input: "model/logits/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/logits/linear/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/logits/linear/Conv2D"
  input: "model/logits/biases/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/transpose"
  op: "Transpose"
  input: "test_model/model/logits/linear/BiasAdd"
  input: "test_model/model/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\000\003\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "output/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "output/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\001\000\000\000\003\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "output/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output/Sub"
  op: "Sub"
  input: "output/Rank"
  input: "output/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Slice/begin"
  op: "Pack"
  input: "output/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "output/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output/Slice"
  op: "Slice"
  input: "output/Shape_1"
  input: "output/Slice/begin"
  input: "output/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output/concat"
  op: "ConcatV2"
  input: "output/concat/values_0"
  input: "output/Slice"
  input: "output/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Reshape"
  op: "Reshape"
  input: "test_model/model/transpose"
  input: "output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Softmax"
  op: "Softmax"
  input: "output/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Reshape_1"
  op: "Reshape"
  input: "output/Softmax"
  input: "output/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "output/ArgMax"
  op: "ArgMax"
  input: "output/Reshape_1"
  input: "output/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^model/encoder/downsample1/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/downsample1/incept-1/dense_inception/squash/weights/w/Assign"
  input: "^model/encoder/downsample2/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/downsample2/incept-1/dense_inception/squash/weights/w/Assign"
  input: "^model/encoder/downsample3/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight/Assign"
  input: "^model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w/Assign"
  input: "^model/logits/weights/w/Assign"
  input: "^model/logits/biases/b/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  input: "model/logits/biases/b"
  input: "model/logits/weights/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_324"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_325"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_326"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_327"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_328"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_329"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_330"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_331"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_332"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_333"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_334"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_335"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_336"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_337"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_338"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_339"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_340"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_341"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_342"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_343"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_344"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_345"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_346"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_347"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_348"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_349"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_350"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_351"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_352"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_353"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_354"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save/RestoreV2:354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_355"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save/RestoreV2:355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_356"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save/RestoreV2:356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_357"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save/RestoreV2:357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_358"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save/RestoreV2:358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_359"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  input: "save/RestoreV2:359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_360"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "save/RestoreV2:360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_361"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "save/RestoreV2:361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_324"
  input: "^save/Assign_325"
  input: "^save/Assign_326"
  input: "^save/Assign_327"
  input: "^save/Assign_328"
  input: "^save/Assign_329"
  input: "^save/Assign_330"
  input: "^save/Assign_331"
  input: "^save/Assign_332"
  input: "^save/Assign_333"
  input: "^save/Assign_334"
  input: "^save/Assign_335"
  input: "^save/Assign_336"
  input: "^save/Assign_337"
  input: "^save/Assign_338"
  input: "^save/Assign_339"
  input: "^save/Assign_340"
  input: "^save/Assign_341"
  input: "^save/Assign_342"
  input: "^save/Assign_343"
  input: "^save/Assign_344"
  input: "^save/Assign_345"
  input: "^save/Assign_346"
  input: "^save/Assign_347"
  input: "^save/Assign_348"
  input: "^save/Assign_349"
  input: "^save/Assign_350"
  input: "^save/Assign_351"
  input: "^save/Assign_352"
  input: "^save/Assign_353"
  input: "^save/Assign_354"
  input: "^save/Assign_355"
  input: "^save/Assign_356"
  input: "^save/Assign_357"
  input: "^save/Assign_358"
  input: "^save/Assign_359"
  input: "^save/Assign_360"
  input: "^save/Assign_361"
}
node {
  name: "save_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  input: "model/logits/biases/b"
  input: "model/logits/weights/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
        string_val: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 362
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_28"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_29"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_30"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_31"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_32"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_33"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_34"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_35"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_36"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_37"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_38"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_39"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_40"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_41"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_42"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_43"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_44"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_45"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_46"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_47"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_48"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_49"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_50"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_51"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_52"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_53"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_54"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_55"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_56"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_57"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_58"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "save_1/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_59"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_60"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_61"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_62"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_63"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_64"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_65"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_66"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_67"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_68"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_69"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_70"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_71"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_72"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_73"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_74"
  op: "Assign"
  input: "model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_75"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_76"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_77"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_78"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_79"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "save_1/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_80"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_81"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_82"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_83"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_84"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_85"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_86"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_87"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_88"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_89"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_90"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_91"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_92"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_93"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_94"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_95"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_96"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_97"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_98"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_99"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_100"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_101"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_102"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_103"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_104"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_105"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_106"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_107"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_108"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_109"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_110"
  op: "Assign"
  input: "model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/incept-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_111"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_112"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_113"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_114"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_115"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "save_1/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_116"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_117"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_118"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_119"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_120"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_121"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_122"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_123"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_124"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_125"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_126"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_127"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_128"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_129"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_130"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_131"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_132"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_133"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_134"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_135"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_136"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_137"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_138"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_139"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_140"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_141"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_142"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_143"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_144"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_145"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_146"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_147"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_148"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_149"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_150"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_151"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_152"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_153"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_154"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_155"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_156"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_157"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_158"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_159"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_160"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_161"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_162"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_163"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_164"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_165"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_166"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_167"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_168"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_169"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_170"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_171"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_172"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_173"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_174"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_175"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_176"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-1/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_177"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_178"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_179"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_180"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_181"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_182"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_183"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_184"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_185"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_186"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_187"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_188"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_189"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_190"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_191"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_192"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_193"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_194"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_195"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_196"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_197"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_198"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_199"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_200"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_201"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_202"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_203"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_204"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_205"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_206"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_207"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_208"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_209"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_210"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_211"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_212"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_213"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_214"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_215"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_216"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_217"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_218"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_219"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_220"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_221"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_222"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_223"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_224"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_225"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_226"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_227"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_228"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_229"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_230"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_231"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_232"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_233"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_234"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_235"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_236"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_237"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-2/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_238"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_239"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_240"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_241"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_242"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_243"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_244"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_245"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_246"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_247"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_248"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_249"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_250"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_251"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_252"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_253"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_254"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_255"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_256"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_257"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_258"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_259"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_260"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_261"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_262"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_263"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_264"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_265"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_266"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_267"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_268"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_269"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_270"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_271"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_272"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_273"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_274"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_275"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_276"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_277"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_278"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_279"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_280"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_281"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_282"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_283"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_284"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_285"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_286"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_287"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_288"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_289"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_290"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_291"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_292"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_293"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_294"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_295"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_296"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_297"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_298"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-3/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_299"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_300"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_301"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_302"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_303"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_304"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_305"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_306"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_307"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_308"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_309"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_310"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_311"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_312"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_313"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_0/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_314"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_315"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_316"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_317"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_318"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_319"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_320"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_321"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_322"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_323"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_324"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_325"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_326"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_327"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_328"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_1/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_329"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_330"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_331"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_332"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_333"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_334"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_335"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_336"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_337"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_338"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_339"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_340"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_341"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_342"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_343"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_2/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_344"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
  input: "save_1/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_345"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
  input: "save_1/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/3x3/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_346"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
  input: "save_1/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_347"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
  input: "save_1/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/5x5/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_348"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
  input: "save_1/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_349"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
  input: "save_1/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/7x7/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_350"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_351"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_352"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_353"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_354"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
  input: "save_1/RestoreV2:354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_355"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
  input: "save_1/RestoreV2:355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_mean_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_356"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
  input: "save_1/RestoreV2:356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_357"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
  input: "save_1/RestoreV2:357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/batchnorm/BatchNorm/renorm_stddev_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_358"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
  input: "save_1/RestoreV2:358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/skip_conv_3/inception/bottleneck/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_359"
  op: "Assign"
  input: "model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
  input: "save_1/RestoreV2:359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/dense-inception-4/dense_inception/squash/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_360"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "save_1/RestoreV2:360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_361"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "save_1/RestoreV2:361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_28"
  input: "^save_1/Assign_29"
  input: "^save_1/Assign_30"
  input: "^save_1/Assign_31"
  input: "^save_1/Assign_32"
  input: "^save_1/Assign_33"
  input: "^save_1/Assign_34"
  input: "^save_1/Assign_35"
  input: "^save_1/Assign_36"
  input: "^save_1/Assign_37"
  input: "^save_1/Assign_38"
  input: "^save_1/Assign_39"
  input: "^save_1/Assign_40"
  input: "^save_1/Assign_41"
  input: "^save_1/Assign_42"
  input: "^save_1/Assign_43"
  input: "^save_1/Assign_44"
  input: "^save_1/Assign_45"
  input: "^save_1/Assign_46"
  input: "^save_1/Assign_47"
  input: "^save_1/Assign_48"
  input: "^save_1/Assign_49"
  input: "^save_1/Assign_50"
  input: "^save_1/Assign_51"
  input: "^save_1/Assign_52"
  input: "^save_1/Assign_53"
  input: "^save_1/Assign_54"
  input: "^save_1/Assign_55"
  input: "^save_1/Assign_56"
  input: "^save_1/Assign_57"
  input: "^save_1/Assign_58"
  input: "^save_1/Assign_59"
  input: "^save_1/Assign_60"
  input: "^save_1/Assign_61"
  input: "^save_1/Assign_62"
  input: "^save_1/Assign_63"
  input: "^save_1/Assign_64"
  input: "^save_1/Assign_65"
  input: "^save_1/Assign_66"
  input: "^save_1/Assign_67"
  input: "^save_1/Assign_68"
  input: "^save_1/Assign_69"
  input: "^save_1/Assign_70"
  input: "^save_1/Assign_71"
  input: "^save_1/Assign_72"
  input: "^save_1/Assign_73"
  input: "^save_1/Assign_74"
  input: "^save_1/Assign_75"
  input: "^save_1/Assign_76"
  input: "^save_1/Assign_77"
  input: "^save_1/Assign_78"
  input: "^save_1/Assign_79"
  input: "^save_1/Assign_80"
  input: "^save_1/Assign_81"
  input: "^save_1/Assign_82"
  input: "^save_1/Assign_83"
  input: "^save_1/Assign_84"
  input: "^save_1/Assign_85"
  input: "^save_1/Assign_86"
  input: "^save_1/Assign_87"
  input: "^save_1/Assign_88"
  input: "^save_1/Assign_89"
  input: "^save_1/Assign_90"
  input: "^save_1/Assign_91"
  input: "^save_1/Assign_92"
  input: "^save_1/Assign_93"
  input: "^save_1/Assign_94"
  input: "^save_1/Assign_95"
  input: "^save_1/Assign_96"
  input: "^save_1/Assign_97"
  input: "^save_1/Assign_98"
  input: "^save_1/Assign_99"
  input: "^save_1/Assign_100"
  input: "^save_1/Assign_101"
  input: "^save_1/Assign_102"
  input: "^save_1/Assign_103"
  input: "^save_1/Assign_104"
  input: "^save_1/Assign_105"
  input: "^save_1/Assign_106"
  input: "^save_1/Assign_107"
  input: "^save_1/Assign_108"
  input: "^save_1/Assign_109"
  input: "^save_1/Assign_110"
  input: "^save_1/Assign_111"
  input: "^save_1/Assign_112"
  input: "^save_1/Assign_113"
  input: "^save_1/Assign_114"
  input: "^save_1/Assign_115"
  input: "^save_1/Assign_116"
  input: "^save_1/Assign_117"
  input: "^save_1/Assign_118"
  input: "^save_1/Assign_119"
  input: "^save_1/Assign_120"
  input: "^save_1/Assign_121"
  input: "^save_1/Assign_122"
  input: "^save_1/Assign_123"
  input: "^save_1/Assign_124"
  input: "^save_1/Assign_125"
  input: "^save_1/Assign_126"
  input: "^save_1/Assign_127"
  input: "^save_1/Assign_128"
  input: "^save_1/Assign_129"
  input: "^save_1/Assign_130"
  input: "^save_1/Assign_131"
  input: "^save_1/Assign_132"
  input: "^save_1/Assign_133"
  input: "^save_1/Assign_134"
  input: "^save_1/Assign_135"
  input: "^save_1/Assign_136"
  input: "^save_1/Assign_137"
  input: "^save_1/Assign_138"
  input: "^save_1/Assign_139"
  input: "^save_1/Assign_140"
  input: "^save_1/Assign_141"
  input: "^save_1/Assign_142"
  input: "^save_1/Assign_143"
  input: "^save_1/Assign_144"
  input: "^save_1/Assign_145"
  input: "^save_1/Assign_146"
  input: "^save_1/Assign_147"
  input: "^save_1/Assign_148"
  input: "^save_1/Assign_149"
  input: "^save_1/Assign_150"
  input: "^save_1/Assign_151"
  input: "^save_1/Assign_152"
  input: "^save_1/Assign_153"
  input: "^save_1/Assign_154"
  input: "^save_1/Assign_155"
  input: "^save_1/Assign_156"
  input: "^save_1/Assign_157"
  input: "^save_1/Assign_158"
  input: "^save_1/Assign_159"
  input: "^save_1/Assign_160"
  input: "^save_1/Assign_161"
  input: "^save_1/Assign_162"
  input: "^save_1/Assign_163"
  input: "^save_1/Assign_164"
  input: "^save_1/Assign_165"
  input: "^save_1/Assign_166"
  input: "^save_1/Assign_167"
  input: "^save_1/Assign_168"
  input: "^save_1/Assign_169"
  input: "^save_1/Assign_170"
  input: "^save_1/Assign_171"
  input: "^save_1/Assign_172"
  input: "^save_1/Assign_173"
  input: "^save_1/Assign_174"
  input: "^save_1/Assign_175"
  input: "^save_1/Assign_176"
  input: "^save_1/Assign_177"
  input: "^save_1/Assign_178"
  input: "^save_1/Assign_179"
  input: "^save_1/Assign_180"
  input: "^save_1/Assign_181"
  input: "^save_1/Assign_182"
  input: "^save_1/Assign_183"
  input: "^save_1/Assign_184"
  input: "^save_1/Assign_185"
  input: "^save_1/Assign_186"
  input: "^save_1/Assign_187"
  input: "^save_1/Assign_188"
  input: "^save_1/Assign_189"
  input: "^save_1/Assign_190"
  input: "^save_1/Assign_191"
  input: "^save_1/Assign_192"
  input: "^save_1/Assign_193"
  input: "^save_1/Assign_194"
  input: "^save_1/Assign_195"
  input: "^save_1/Assign_196"
  input: "^save_1/Assign_197"
  input: "^save_1/Assign_198"
  input: "^save_1/Assign_199"
  input: "^save_1/Assign_200"
  input: "^save_1/Assign_201"
  input: "^save_1/Assign_202"
  input: "^save_1/Assign_203"
  input: "^save_1/Assign_204"
  input: "^save_1/Assign_205"
  input: "^save_1/Assign_206"
  input: "^save_1/Assign_207"
  input: "^save_1/Assign_208"
  input: "^save_1/Assign_209"
  input: "^save_1/Assign_210"
  input: "^save_1/Assign_211"
  input: "^save_1/Assign_212"
  input: "^save_1/Assign_213"
  input: "^save_1/Assign_214"
  input: "^save_1/Assign_215"
  input: "^save_1/Assign_216"
  input: "^save_1/Assign_217"
  input: "^save_1/Assign_218"
  input: "^save_1/Assign_219"
  input: "^save_1/Assign_220"
  input: "^save_1/Assign_221"
  input: "^save_1/Assign_222"
  input: "^save_1/Assign_223"
  input: "^save_1/Assign_224"
  input: "^save_1/Assign_225"
  input: "^save_1/Assign_226"
  input: "^save_1/Assign_227"
  input: "^save_1/Assign_228"
  input: "^save_1/Assign_229"
  input: "^save_1/Assign_230"
  input: "^save_1/Assign_231"
  input: "^save_1/Assign_232"
  input: "^save_1/Assign_233"
  input: "^save_1/Assign_234"
  input: "^save_1/Assign_235"
  input: "^save_1/Assign_236"
  input: "^save_1/Assign_237"
  input: "^save_1/Assign_238"
  input: "^save_1/Assign_239"
  input: "^save_1/Assign_240"
  input: "^save_1/Assign_241"
  input: "^save_1/Assign_242"
  input: "^save_1/Assign_243"
  input: "^save_1/Assign_244"
  input: "^save_1/Assign_245"
  input: "^save_1/Assign_246"
  input: "^save_1/Assign_247"
  input: "^save_1/Assign_248"
  input: "^save_1/Assign_249"
  input: "^save_1/Assign_250"
  input: "^save_1/Assign_251"
  input: "^save_1/Assign_252"
  input: "^save_1/Assign_253"
  input: "^save_1/Assign_254"
  input: "^save_1/Assign_255"
  input: "^save_1/Assign_256"
  input: "^save_1/Assign_257"
  input: "^save_1/Assign_258"
  input: "^save_1/Assign_259"
  input: "^save_1/Assign_260"
  input: "^save_1/Assign_261"
  input: "^save_1/Assign_262"
  input: "^save_1/Assign_263"
  input: "^save_1/Assign_264"
  input: "^save_1/Assign_265"
  input: "^save_1/Assign_266"
  input: "^save_1/Assign_267"
  input: "^save_1/Assign_268"
  input: "^save_1/Assign_269"
  input: "^save_1/Assign_270"
  input: "^save_1/Assign_271"
  input: "^save_1/Assign_272"
  input: "^save_1/Assign_273"
  input: "^save_1/Assign_274"
  input: "^save_1/Assign_275"
  input: "^save_1/Assign_276"
  input: "^save_1/Assign_277"
  input: "^save_1/Assign_278"
  input: "^save_1/Assign_279"
  input: "^save_1/Assign_280"
  input: "^save_1/Assign_281"
  input: "^save_1/Assign_282"
  input: "^save_1/Assign_283"
  input: "^save_1/Assign_284"
  input: "^save_1/Assign_285"
  input: "^save_1/Assign_286"
  input: "^save_1/Assign_287"
  input: "^save_1/Assign_288"
  input: "^save_1/Assign_289"
  input: "^save_1/Assign_290"
  input: "^save_1/Assign_291"
  input: "^save_1/Assign_292"
  input: "^save_1/Assign_293"
  input: "^save_1/Assign_294"
  input: "^save_1/Assign_295"
  input: "^save_1/Assign_296"
  input: "^save_1/Assign_297"
  input: "^save_1/Assign_298"
  input: "^save_1/Assign_299"
  input: "^save_1/Assign_300"
  input: "^save_1/Assign_301"
  input: "^save_1/Assign_302"
  input: "^save_1/Assign_303"
  input: "^save_1/Assign_304"
  input: "^save_1/Assign_305"
  input: "^save_1/Assign_306"
  input: "^save_1/Assign_307"
  input: "^save_1/Assign_308"
  input: "^save_1/Assign_309"
  input: "^save_1/Assign_310"
  input: "^save_1/Assign_311"
  input: "^save_1/Assign_312"
  input: "^save_1/Assign_313"
  input: "^save_1/Assign_314"
  input: "^save_1/Assign_315"
  input: "^save_1/Assign_316"
  input: "^save_1/Assign_317"
  input: "^save_1/Assign_318"
  input: "^save_1/Assign_319"
  input: "^save_1/Assign_320"
  input: "^save_1/Assign_321"
  input: "^save_1/Assign_322"
  input: "^save_1/Assign_323"
  input: "^save_1/Assign_324"
  input: "^save_1/Assign_325"
  input: "^save_1/Assign_326"
  input: "^save_1/Assign_327"
  input: "^save_1/Assign_328"
  input: "^save_1/Assign_329"
  input: "^save_1/Assign_330"
  input: "^save_1/Assign_331"
  input: "^save_1/Assign_332"
  input: "^save_1/Assign_333"
  input: "^save_1/Assign_334"
  input: "^save_1/Assign_335"
  input: "^save_1/Assign_336"
  input: "^save_1/Assign_337"
  input: "^save_1/Assign_338"
  input: "^save_1/Assign_339"
  input: "^save_1/Assign_340"
  input: "^save_1/Assign_341"
  input: "^save_1/Assign_342"
  input: "^save_1/Assign_343"
  input: "^save_1/Assign_344"
  input: "^save_1/Assign_345"
  input: "^save_1/Assign_346"
  input: "^save_1/Assign_347"
  input: "^save_1/Assign_348"
  input: "^save_1/Assign_349"
  input: "^save_1/Assign_350"
  input: "^save_1/Assign_351"
  input: "^save_1/Assign_352"
  input: "^save_1/Assign_353"
  input: "^save_1/Assign_354"
  input: "^save_1/Assign_355"
  input: "^save_1/Assign_356"
  input: "^save_1/Assign_357"
  input: "^save_1/Assign_358"
  input: "^save_1/Assign_359"
  input: "^save_1/Assign_360"
  input: "^save_1/Assign_361"
}
versions {
  producer: 26
}
