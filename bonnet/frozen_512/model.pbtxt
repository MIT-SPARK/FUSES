node {
  name: "x_pl"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "y_pl"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "test_model/model/images/resize_images/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/images/resize_images/ResizeBilinear"
  op: "ResizeBilinear"
  input: "x_pl"
  input: "test_model/model/images/resize_images/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/images/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/images/transpose"
  op: "Transpose"
  input: "test_model/model/images/resize_images/ResizeBilinear"
  input: "test_model/model/images/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/images/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "test_model/model/images/sub"
  op: "Sub"
  input: "test_model/model/images/transpose"
  input: "test_model/model/images/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/images/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "test_model/model/images/truediv"
  op: "RealDiv"
  input: "test_model/model/images/sub"
  input: "test_model/model/images/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1154700517654419
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/images/truediv"
  input: "model/encoder/downsample1/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample1/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/images/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample1/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample1/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample1/downsample/concat/concat"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/encoder/downsample1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample2/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/downsample/concat/concat"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06454972177743912
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\0000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.028867512941360474
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/downsample3/downsample/conv/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/downsample/conv/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/downsample/conv/convolution/Conv2D"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/pool/MaxPool"
  op: "MaxPool"
  input: "test_model/model/encoder/downsample2/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/concat/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/downsample/concat/concat"
  op: "ConcatV2"
  input: "test_model/model/encoder/downsample3/downsample/conv/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample3/downsample/pool/MaxPool"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample3/downsample/concat/concat"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample3/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample3/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/downsample3/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000P\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04225771129131317
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 7
        }
        dim {
          size: 80
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/encoder/godeep/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\0000\000\000\000P\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 48
        }
        dim {
          size: 80
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000P\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/encoder/godeep/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000 \000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 32
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/decoder/upsample/unpool1/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-3/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Shape"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice_2"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/mul_1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack"
  op: "Pack"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/strided_slice"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack/1"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/add_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/stack"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/read"
  input: "test_model/model/decoder/upsample/unpool2/non-bt-4/non_bt/res/relu/LeakyRelu/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/conv2d_transpose"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  op: "Relu"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/upconv/Conv2d_transpose/Relu"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/relu/LeakyRelu/Maximum"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mul"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/convolution/Conv2D"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/read"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/read"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/read"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/add"
  op: "Add"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-1/non_bt/res/relu/LeakyRelu/Maximum"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  op: "Mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/alpha"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  op: "Maximum"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/mul"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "model/logits/weights/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "model/logits/weights/w/Initializer/truncated_normal/TruncatedNormal"
  input: "model/logits/weights/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "model/logits/weights/w/Initializer/truncated_normal"
  op: "Add"
  input: "model/logits/weights/w/Initializer/truncated_normal/mul"
  input: "model/logits/weights/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "model/logits/weights/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/logits/weights/w/Assign"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "model/logits/weights/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/logits/weights/w/read"
  op: "Identity"
  input: "model/logits/weights/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
}
node {
  name: "test_model/model/logits/biases/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        tensor_content: "\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314\314="
      }
    }
  }
}
node {
  name: "model/logits/biases/b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/logits/biases/b/Assign"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "test_model/model/logits/biases/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/logits/biases/b/read"
  op: "Identity"
  input: "model/logits/biases/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
}
node {
  name: "test_model/model/logits/linear/Conv2D"
  op: "Conv2D"
  input: "test_model/model/decoder/upsample/unpool3/non-bt-2/non_bt/res/relu/LeakyRelu/Maximum"
  input: "model/logits/weights/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "test_model/model/logits/linear/BiasAdd"
  op: "BiasAdd"
  input: "test_model/model/logits/linear/Conv2D"
  input: "model/logits/biases/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "test_model/model/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "test_model/model/transpose"
  op: "Transpose"
  input: "test_model/model/logits/linear/BiasAdd"
  input: "test_model/model/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\002\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "output/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "output/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\000\002\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "output/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output/Sub"
  op: "Sub"
  input: "output/Rank"
  input: "output/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Slice/begin"
  op: "Pack"
  input: "output/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "output/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output/Slice"
  op: "Slice"
  input: "output/Shape_1"
  input: "output/Slice/begin"
  input: "output/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output/concat"
  op: "ConcatV2"
  input: "output/concat/values_0"
  input: "output/Slice"
  input: "output/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Reshape"
  op: "Reshape"
  input: "test_model/model/transpose"
  input: "output/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/Softmax"
  op: "Softmax"
  input: "output/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Reshape_1"
  op: "Reshape"
  input: "output/Softmax"
  input: "output/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "output/ArgMax"
  op: "ArgMax"
  input: "output/Reshape_1"
  input: "output/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^model/encoder/downsample1/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample3/downsample/conv/weights/w/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights/Assign"
  input: "^model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean/Assign"
  input: "^model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance/Assign"
  input: "^model/logits/weights/w/Assign"
  input: "^model/logits/biases/b/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/logits/biases/b"
  input: "model/logits/weights/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
}
node {
  name: "save_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "model/logits/biases/b"
  input: "model/logits/weights/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
        string_val: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/downsample/conv/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/downsample/conv/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/downsample/conv/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
        string_val: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
        string_val: "model/logits/biases/b"
        string_val: "model/logits/weights/w"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 215
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_28"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_29"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_30"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_31"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_32"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_33"
  op: "Assign"
  input: "model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool1/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_34"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_35"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_36"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_37"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_38"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_39"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_40"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_41"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_42"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_43"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_44"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_45"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_46"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_47"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_48"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_49"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_50"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_51"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_52"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_53"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_54"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_55"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_56"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_57"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_58"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_59"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_60"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_61"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_62"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_63"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_64"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_65"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_66"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_67"
  op: "Assign"
  input: "model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool2/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_68"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_69"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_70"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_71"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_72"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_73"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_74"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_75"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_76"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_77"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_78"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_79"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_80"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_81"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_82"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_83"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_84"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
  input: "save_1/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_85"
  op: "Assign"
  input: "model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
  input: "save_1/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/decoder/upsample/unpool3/upconv/Conv2d_transpose/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_86"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_87"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_88"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_89"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_90"
  op: "Assign"
  input: "model/encoder/downsample1/downsample/conv/weights/w"
  input: "save_1/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_91"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_92"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_93"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_94"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_95"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_96"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_97"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_98"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_99"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_100"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_101"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_102"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_103"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_104"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_105"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_106"
  op: "Assign"
  input: "model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample1/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_107"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_108"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_109"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_110"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_111"
  op: "Assign"
  input: "model/encoder/downsample2/downsample/conv/weights/w"
  input: "save_1/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_112"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_113"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_114"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_115"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_116"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_117"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_118"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_119"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_120"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_121"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_122"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_123"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_124"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_125"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_126"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_127"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_128"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_129"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_130"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_131"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_132"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_133"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_134"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_135"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_136"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_137"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_138"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_139"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_140"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_141"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_142"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_143"
  op: "Assign"
  input: "model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample2/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_144"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_145"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_146"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_147"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_148"
  op: "Assign"
  input: "model/encoder/downsample3/downsample/conv/weights/w"
  input: "save_1/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/downsample/conv/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_149"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_150"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_151"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_152"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_153"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_154"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_155"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_156"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_157"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_158"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_159"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_160"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_161"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_162"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_163"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_164"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_165"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_166"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_167"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_168"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_169"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_170"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_171"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_172"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_173"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_174"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_175"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_176"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_177"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_178"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_179"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_180"
  op: "Assign"
  input: "model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/downsample3/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_181"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_182"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_183"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_184"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_185"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_186"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_187"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_188"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-1/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_189"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_190"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_191"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_192"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_193"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_194"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_195"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_196"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-2/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_197"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_198"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_199"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_200"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_201"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_202"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_203"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_204"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-3/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_205"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
  input: "save_1/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_206"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
  input: "save_1/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym1/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_207"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
  input: "save_1/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/horiz/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_208"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
  input: "save_1/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/asym2/vert/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_209"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
  input: "save_1/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_210"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
  input: "save_1/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_211"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_212"
  op: "Assign"
  input: "model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/encoder/godeep/non-bt-4/non_bt/batchnorm/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_213"
  op: "Assign"
  input: "model/logits/biases/b"
  input: "save_1/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/biases/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_214"
  op: "Assign"
  input: "model/logits/weights/w"
  input: "save_1/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/logits/weights/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_28"
  input: "^save_1/Assign_29"
  input: "^save_1/Assign_30"
  input: "^save_1/Assign_31"
  input: "^save_1/Assign_32"
  input: "^save_1/Assign_33"
  input: "^save_1/Assign_34"
  input: "^save_1/Assign_35"
  input: "^save_1/Assign_36"
  input: "^save_1/Assign_37"
  input: "^save_1/Assign_38"
  input: "^save_1/Assign_39"
  input: "^save_1/Assign_40"
  input: "^save_1/Assign_41"
  input: "^save_1/Assign_42"
  input: "^save_1/Assign_43"
  input: "^save_1/Assign_44"
  input: "^save_1/Assign_45"
  input: "^save_1/Assign_46"
  input: "^save_1/Assign_47"
  input: "^save_1/Assign_48"
  input: "^save_1/Assign_49"
  input: "^save_1/Assign_50"
  input: "^save_1/Assign_51"
  input: "^save_1/Assign_52"
  input: "^save_1/Assign_53"
  input: "^save_1/Assign_54"
  input: "^save_1/Assign_55"
  input: "^save_1/Assign_56"
  input: "^save_1/Assign_57"
  input: "^save_1/Assign_58"
  input: "^save_1/Assign_59"
  input: "^save_1/Assign_60"
  input: "^save_1/Assign_61"
  input: "^save_1/Assign_62"
  input: "^save_1/Assign_63"
  input: "^save_1/Assign_64"
  input: "^save_1/Assign_65"
  input: "^save_1/Assign_66"
  input: "^save_1/Assign_67"
  input: "^save_1/Assign_68"
  input: "^save_1/Assign_69"
  input: "^save_1/Assign_70"
  input: "^save_1/Assign_71"
  input: "^save_1/Assign_72"
  input: "^save_1/Assign_73"
  input: "^save_1/Assign_74"
  input: "^save_1/Assign_75"
  input: "^save_1/Assign_76"
  input: "^save_1/Assign_77"
  input: "^save_1/Assign_78"
  input: "^save_1/Assign_79"
  input: "^save_1/Assign_80"
  input: "^save_1/Assign_81"
  input: "^save_1/Assign_82"
  input: "^save_1/Assign_83"
  input: "^save_1/Assign_84"
  input: "^save_1/Assign_85"
  input: "^save_1/Assign_86"
  input: "^save_1/Assign_87"
  input: "^save_1/Assign_88"
  input: "^save_1/Assign_89"
  input: "^save_1/Assign_90"
  input: "^save_1/Assign_91"
  input: "^save_1/Assign_92"
  input: "^save_1/Assign_93"
  input: "^save_1/Assign_94"
  input: "^save_1/Assign_95"
  input: "^save_1/Assign_96"
  input: "^save_1/Assign_97"
  input: "^save_1/Assign_98"
  input: "^save_1/Assign_99"
  input: "^save_1/Assign_100"
  input: "^save_1/Assign_101"
  input: "^save_1/Assign_102"
  input: "^save_1/Assign_103"
  input: "^save_1/Assign_104"
  input: "^save_1/Assign_105"
  input: "^save_1/Assign_106"
  input: "^save_1/Assign_107"
  input: "^save_1/Assign_108"
  input: "^save_1/Assign_109"
  input: "^save_1/Assign_110"
  input: "^save_1/Assign_111"
  input: "^save_1/Assign_112"
  input: "^save_1/Assign_113"
  input: "^save_1/Assign_114"
  input: "^save_1/Assign_115"
  input: "^save_1/Assign_116"
  input: "^save_1/Assign_117"
  input: "^save_1/Assign_118"
  input: "^save_1/Assign_119"
  input: "^save_1/Assign_120"
  input: "^save_1/Assign_121"
  input: "^save_1/Assign_122"
  input: "^save_1/Assign_123"
  input: "^save_1/Assign_124"
  input: "^save_1/Assign_125"
  input: "^save_1/Assign_126"
  input: "^save_1/Assign_127"
  input: "^save_1/Assign_128"
  input: "^save_1/Assign_129"
  input: "^save_1/Assign_130"
  input: "^save_1/Assign_131"
  input: "^save_1/Assign_132"
  input: "^save_1/Assign_133"
  input: "^save_1/Assign_134"
  input: "^save_1/Assign_135"
  input: "^save_1/Assign_136"
  input: "^save_1/Assign_137"
  input: "^save_1/Assign_138"
  input: "^save_1/Assign_139"
  input: "^save_1/Assign_140"
  input: "^save_1/Assign_141"
  input: "^save_1/Assign_142"
  input: "^save_1/Assign_143"
  input: "^save_1/Assign_144"
  input: "^save_1/Assign_145"
  input: "^save_1/Assign_146"
  input: "^save_1/Assign_147"
  input: "^save_1/Assign_148"
  input: "^save_1/Assign_149"
  input: "^save_1/Assign_150"
  input: "^save_1/Assign_151"
  input: "^save_1/Assign_152"
  input: "^save_1/Assign_153"
  input: "^save_1/Assign_154"
  input: "^save_1/Assign_155"
  input: "^save_1/Assign_156"
  input: "^save_1/Assign_157"
  input: "^save_1/Assign_158"
  input: "^save_1/Assign_159"
  input: "^save_1/Assign_160"
  input: "^save_1/Assign_161"
  input: "^save_1/Assign_162"
  input: "^save_1/Assign_163"
  input: "^save_1/Assign_164"
  input: "^save_1/Assign_165"
  input: "^save_1/Assign_166"
  input: "^save_1/Assign_167"
  input: "^save_1/Assign_168"
  input: "^save_1/Assign_169"
  input: "^save_1/Assign_170"
  input: "^save_1/Assign_171"
  input: "^save_1/Assign_172"
  input: "^save_1/Assign_173"
  input: "^save_1/Assign_174"
  input: "^save_1/Assign_175"
  input: "^save_1/Assign_176"
  input: "^save_1/Assign_177"
  input: "^save_1/Assign_178"
  input: "^save_1/Assign_179"
  input: "^save_1/Assign_180"
  input: "^save_1/Assign_181"
  input: "^save_1/Assign_182"
  input: "^save_1/Assign_183"
  input: "^save_1/Assign_184"
  input: "^save_1/Assign_185"
  input: "^save_1/Assign_186"
  input: "^save_1/Assign_187"
  input: "^save_1/Assign_188"
  input: "^save_1/Assign_189"
  input: "^save_1/Assign_190"
  input: "^save_1/Assign_191"
  input: "^save_1/Assign_192"
  input: "^save_1/Assign_193"
  input: "^save_1/Assign_194"
  input: "^save_1/Assign_195"
  input: "^save_1/Assign_196"
  input: "^save_1/Assign_197"
  input: "^save_1/Assign_198"
  input: "^save_1/Assign_199"
  input: "^save_1/Assign_200"
  input: "^save_1/Assign_201"
  input: "^save_1/Assign_202"
  input: "^save_1/Assign_203"
  input: "^save_1/Assign_204"
  input: "^save_1/Assign_205"
  input: "^save_1/Assign_206"
  input: "^save_1/Assign_207"
  input: "^save_1/Assign_208"
  input: "^save_1/Assign_209"
  input: "^save_1/Assign_210"
  input: "^save_1/Assign_211"
  input: "^save_1/Assign_212"
  input: "^save_1/Assign_213"
  input: "^save_1/Assign_214"
}
versions {
  producer: 26
}
